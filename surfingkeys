settings.hintAlign = "left";
//Hints.characters = 'yuiophjklnm'; // for right hand
Hints.characters = 'fjdkrueisl'; // Home row without pinky baby
cmap('<Ctrl-j>', '<Tab>');
cmap('<Ctrl-k>', '<Shift-Tab>');


function alt_key(default_key){
    return ',' + default_key;
}

var vsc_keys = ['v', 's', 'd', 'h', 'l', 'r']; //Video Speed Controller Keys
var youtube_keys = ['i', 'f', 'c', '0'];
var block_sites = ["netflix.com", "youtube.com", "seyredelim.com", ".*dizi.*", ".*film.*"];

//TODO
var block_for_vsc= new RegExp(block_sites.join("|"), "i");
var block_for_youtube= new RegExp(block_sites.join("|"), "i");


//Add Alternatives
vsc_keys.forEach(item => map(alt_key(item), item, block_for_vsc));
youtube_keys.forEach(item => map(alt_key(item), item));

//Remove Keys
vsc_keys.forEach(item => unmap(item, block_for_vsc));
youtube_keys.forEach(item => unmap(item, block_for_youtube));

//Vimium Like Keybindings
//Normal Tabs
map('J', 'E');
map('K', 'R');
//With Tree Style Tab
//map('J', 'R');
//map('K', 'E');
var j_k_character=0;

map('H', 'S');
map(';o', '<Ctrl-6>');
map('L', 'D');
map('F', 'gf');


//Tree Style Tab Shortcuts
unmap('e');

mapkey('ej', 'Move down current tab', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'move-down',
        tab:            'current',
        followChildren: false
    });
});

mapkey('eJ', 'Move down current tabs tree', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'move-down',
        tab:            'current',
        followChildren: true
    });
});

mapkey('ek', 'Move up current tab', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'move-up',
        tab:            'current',
        followChildren: false
    });
});

mapkey('eK', 'Move up current tabs tree', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'move-up',
        tab:            'current',
        followChildren: true
    });
});


mapkey('ez', 'Toggle tree collapse state', () => {
    //Call from root of tree
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
          type: 'toggle-tree-collapsed',
          tab:  'active' // required, tabs.Tab.id or alias
    });
});

mapkey('el', 'Indent/Demote a tab', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'indent',
        tab:            'current',
        followChildren: false
    });
});

mapkey('eh', 'Outdent/Promote a tab', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'outdent',
        tab:            'current',
        followChildren: false
    });
});

mapkey('eL', 'Indent/Demote a tree', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'indent',
        tab:            'current',
        followChildren: true
    });
});

mapkey('eH', 'Outdent/Promote a tree', () => {
    browser.runtime.sendMessage('treestyletab@piro.sakura.ne.jp', {
        type:           'outdent',
        tab:            'current',
        followChildren: true
    });
});

/*
mapkey('er', 'Toggle J and K character', () => {
    
    if (j_k_character == 0){
        map('J', 'E');
        map('K', 'R');
        j_k_character = 1;
    }
    else{
        map('J', 'R');
        map('K', 'E');
        j_k_character = 0;
        
    }
});
*/


    //TV series go to next episode
   mapkey(';n', 'Go to next episode', 
    function next_episode(){
        base_url = window.location.href
        ep_no = base_url.match(/(\d+)(?!.*\d)/)[0]
        new_ep = parseInt(ep_no, 10) + 1;
        n = base_url.lastIndexOf(ep_no);
        new_url = base_url.slice(0, n) + base_url.slice(n).replace(ep_no, new_ep);
        window.location = new_url;
    }) ;
    
    //unmapAllExcept(['j','k','gf', 'J', 'K', 'H', 'L', 'yy', 'gg', 'G', 'gi', 'F', '<Ctrl-6>', 'X'], /youtube.com|dizibox.com|netflix.com/);
